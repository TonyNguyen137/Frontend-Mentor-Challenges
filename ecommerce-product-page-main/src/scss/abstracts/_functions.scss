@use 'sass:math';

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    576px
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  // $name: sm , $breakpoints: (sm: 576px)

  $min: map-get($breakpoints, $name); //$min: 576px
  @return if($min != 0, $min, null); // returns 576px
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))
//    "-sm"
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
  //$name: sm, $breakpoint: (sm:576px)

  //
  @return if(breakpoint-min($name, $breakpoints) == null, '', '-#{$name}');
}

@function rem($pixel) {
  $value: math.div($pixel, 16) * 1rem;

  @return $value;
}
